!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
delete_trie	main.cpp	/^    void delete_trie(trie_node* ptree)$/;"	f	language:C++	class:trie_tree	file:	access:private	signature:(trie_node* ptree)
insert	main.cpp	/^    bool insert(const char *word)$/;"	f	language:C++	class:trie_tree	access:public	signature:(const char *word)
is_terminal	main.cpp	/^    bool is_terminal;$/;"	m	language:C++	struct:trie_node	file:	access:public
letter	main.cpp	/^    char letter;$/;"	m	language:C++	struct:trie_node	file:	access:public
letter_num	main.cpp	/^    static const int letter_num = 26;$/;"	m	language:C++	struct:trie_node	file:	access:public
main	main.cpp	/^int main(void)$/;"	f	language:C++	signature:(void)
pchild	main.cpp	/^    trie_node* pchild[letter_num];$/;"	m	language:C++	struct:trie_node	file:	access:public
root	main.cpp	/^    trie_node *root;$/;"	m	language:C++	class:trie_tree	file:	access:private
trie_node	main.cpp	/^    trie_node():is_terminal(false),letter('*')$/;"	f	language:C++	struct:trie_node	access:public	signature:()
trie_node	main.cpp	/^struct trie_node$/;"	s	language:C++	file:
trie_node::is_terminal	main.cpp	/^    bool is_terminal;$/;"	m	language:C++	struct:trie_node	file:	access:public
trie_node::letter	main.cpp	/^    char letter;$/;"	m	language:C++	struct:trie_node	file:	access:public
trie_node::letter_num	main.cpp	/^    static const int letter_num = 26;$/;"	m	language:C++	struct:trie_node	file:	access:public
trie_node::pchild	main.cpp	/^    trie_node* pchild[letter_num];$/;"	m	language:C++	struct:trie_node	file:	access:public
trie_node::trie_node	main.cpp	/^    trie_node():is_terminal(false),letter('*')$/;"	f	language:C++	struct:trie_node	access:public	signature:()
trie_tree	main.cpp	/^    trie_tree()$/;"	f	language:C++	class:trie_tree	access:public	signature:()
trie_tree	main.cpp	/^class trie_tree$/;"	c	language:C++	file:
trie_tree::delete_trie	main.cpp	/^    void delete_trie(trie_node* ptree)$/;"	f	language:C++	class:trie_tree	file:	access:private	signature:(trie_node* ptree)
trie_tree::insert	main.cpp	/^    bool insert(const char *word)$/;"	f	language:C++	class:trie_tree	access:public	signature:(const char *word)
trie_tree::root	main.cpp	/^    trie_node *root;$/;"	m	language:C++	class:trie_tree	file:	access:private
trie_tree::trie_tree	main.cpp	/^    trie_tree()$/;"	f	language:C++	class:trie_tree	access:public	signature:()
trie_tree::~trie_node	main.cpp	/^    ~trie_node()$/;"	f	language:C++	class:trie_tree	access:public	signature:()
~trie_node	main.cpp	/^    ~trie_node()$/;"	f	language:C++	class:trie_tree	access:public	signature:()
